//
//  Day2.swift
//  advent-of-code
//
//  Created by Frank Anderson on 12/1/22.
//

import Foundation

class Day2Problem1: Challenge {
    static func run(input: String) -> String {
        let split = input.components(separatedBy: "\n") // separate every new line into an element of the array
        
        let scores = split.map { pair in
            let round = pair.components(separatedBy: " ")
            
            let opponent = round[0]
            let player = round[1]
            
            return xyzScore(player: player) + resultScore(opponent: oppToMove(opponent: opponent), player: plToMove(player: player))
        }
        
        let sum = scores.reduce(0, +)
        
        return String(sum)
    }
    
    static func xyzScore(player: String) -> Int {
        switch player {
            case "X":
                return 1
            case "Y":
                return 2
            case "Z":
                return 3
            default:
                fatalError("Invalid input: " + player)
        }
    }
    
    static func resultScore(opponent: String, player: String) -> Int {
        if opponent == "Rock" && player == "Scissors"
            || opponent == "Paper" && player == "Rock"
            || opponent == "Scissors" && player == "Paper" {
            return 0 // player loses
        } else if opponent == player {
            return 3 // player ties
        } else {
            return 6 // player wins if they haven't lost or drawn
        }
    }
    
    static func oppToMove(opponent: String) -> String {
        return inToMove(input: opponent, map: ("A", "B", "C"))
    }
    
    static func plToMove(player: String) -> String {
        return inToMove(input: player, map: ("X", "Y", "Z"))
    }
    
    static func inToMove(input: String, map: (first: String, second: String, third: String)) -> String {
        switch input {
            case map.first:
                return "Rock"
            case map.second:
                return "Paper"
            case map.third:
                return "Scissors"
            default:
                fatalError("Invalid input")
        }
    }
    
    static func check() -> Bool {
        return Day2Problem1.run(input: Day2_SampleInput) == Day2_SampleOutput
    }
}

class Day2Problem2: Challenge {
    static func run(input: String) -> String {
        let split = input.components(separatedBy: "\n") // separate every new line into an element of the array
        
        let scores = split.map { pair in
            let round = pair.components(separatedBy: " ")
            
            let opponent = round[0]
            let goal = round[1]
            let player = goalToMove(goal: goal, opponent: opponent)
            
            return abcScore(player: player)
            + resultScore(opponent: opponent, player: player)
        }
        
        let sum = scores.reduce(0, +)
        
        return String(sum)
        
        func goalToMove(goal: String, opponent: String) -> String {
            switch goal {
                case "X": // lose
                    return loseTo(opponent: opponent)
                case "Y": // draw
                    return opponent
                case "Z": // win
                    return winAgainst(opponent: opponent)
                default:
                    fatalError("Invalid input")
            }
        }
    }
    
    static func resultScore(opponent: String, player: String) -> Int {
        if opponent == "A" && player == "C"
            || opponent == "B" && player == "A"
            || opponent == "C" && player == "B" {
            return 0 // player loses
        } else if opponent == player {
            return 3 // player ties
        } else {
            return 6 // player wins if they haven't lost or drawn
        }
    }
    
    static func abcScore(player: String) -> Int {
        switch player {
            case "A":
                return 1
            case "B":
                return 2
            case "C":
                return 3
            default:
                fatalError("Invalid input: " + player)
        }
    }
    
    static func loseTo(opponent: String) -> String {
        switch opponent {
            case "A":
                return "C"
            case "B":
                return "A"
            case "C":
                return "B"
            default:
                fatalError("Invalid input")
        }
    }
    
    static func winAgainst(opponent: String) -> String {
        switch opponent {
            case "A":
                return "B"
            case "B":
                return "C"
            case "C":
                return "A"
            default:
                fatalError("Invalid input")
        }
    }
    
    static func check() -> Bool {
        return Day2Problem2.run(input: Day2_SampleInput) == Day2_P2_SampleOutput
    }
    
    
}


let Day2_SampleInput: String = """
A Y
B X
C Z
"""

// 1st round, opp chooses A (Rock) so you choose Y (Paper). Win with score of 8 (2 for Paper + 6 for win)
// 2nd round, opp chooses B (Paper) so you choose X (Rock). Loss with score of 1 (1 for Rock + 0 for loss)
// 3rd round, opp chooses C (Scissors) so you choose Z (Scissors). Tie with score of 6 (3 for Scissors + 3 for tie)
// Total score: 8 + 1 + 6 = 15

// What is the score if you follow the strategy guide? (Example case: 15)


// X means you need to lose, Y means you need to end the round in a draw, and Z means you need to win
// 1st round A = rock + Y = draw -> play rock -> score: draw = 3 + rock = 1 -> 4
// 2nd round B = paper + X = lose -> play rock -> score: lose = 0 + rock = 1 -> 1
// 3rd round C = scissors + Z = win -> play rock -> score: win = 6 + rock = 1 -> 7
// total = 4 + 1 + 7 = 12
// note: this is a really bad unit test

let Day2_SampleOutput: String = "15"
let Day2_P2_SampleOutput: String = "12"
let Day2_RealInput: String = """
C Z
C X
B Z
A X
A Z
C Z
A Y
C Z
C Z
A X
C Y
A Z
B Z
C Z
C Z
B Z
C Z
B Z
C Z
A X
C Z
C Z
A X
C Z
B Z
B Z
C Z
C Z
B Z
A X
A X
C Z
C Z
A X
B Z
B Z
B Z
A X
A X
A X
B Z
C Z
C Z
C Z
B Z
C X
B Z
B Z
A X
C Z
C Z
B Z
A Y
A Z
C X
A X
C Z
C Z
B Z
C Z
C Z
C X
C Z
A X
B Z
B Z
C X
C Z
B Z
B Z
C Z
B Z
B Z
C Z
B Z
A Z
A X
C Z
B X
B Z
C Z
C Z
A Z
B Z
C Z
B Z
B Y
A Z
C Z
B Z
A X
A Y
C Z
B Z
B Z
A X
B Z
A Z
B Z
C Z
C Y
C Z
B Z
C Z
C Z
C Z
C X
B Z
B Z
B Z
B Z
A X
C Z
C Z
A X
C Z
B Z
B Z
C Z
C Z
C Z
A X
B Z
C Z
B Z
B Z
C X
A Z
B Z
C Z
A X
A X
A X
B Z
B Z
B Z
B Z
B Z
B Z
C Z
B X
C Z
C Z
B X
C Z
C Y
A X
C Z
A Z
A X
B Z
B Z
B Z
C Z
C X
A Z
C Z
C Y
A Y
A X
B Z
B X
C Z
A Z
C Z
B Z
B Z
A X
B Z
A X
C Y
B Z
B Y
A Z
B Z
A X
C Z
A X
C Z
B Z
A Z
B Z
A Y
C Z
C Z
C Z
B X
C Z
A X
B X
B Z
C Z
A X
B Z
B Z
A Z
B Y
B Z
B Z
C Z
C Z
B Z
C Z
B Z
A X
B X
A X
C Y
B Z
C Z
C Z
C Z
B Z
B Z
C Z
A X
A Y
C Z
B Z
B Z
C Z
B Y
C Z
B Z
C Z
B Z
B Z
C X
B Z
A Z
A X
A X
C Z
B Z
C Z
C Z
C Z
B Z
A Y
C Z
C Z
C Z
B Z
C Z
B Z
A X
C Z
B X
C Z
A X
B X
A Z
B Z
B X
A X
C Z
A Y
A Y
C X
C Z
C Z
A X
A Y
B Z
A Z
B Z
A X
C Z
B X
B Z
B Z
B Z
B Z
C Y
B Z
B Z
B Z
A Z
A Y
C Z
C Z
B Z
A Z
A X
A Y
C Z
B X
C Z
A X
A Z
B Z
A X
A X
C X
A X
A X
A Z
C Z
B Z
C Z
C Z
B Z
B Z
A Y
B Z
B Z
C Z
B Z
A Y
A X
B Z
C Z
B Z
A X
C Z
C Z
C Z
B Z
A Z
C Z
C Z
B Z
C X
B Z
B Z
B Z
A Y
A X
B Z
C Z
C Z
A Z
B Y
C Z
B Z
B Z
B Z
A X
A X
C Z
C Z
A X
C Z
B Z
A X
B Z
A X
B Z
B Z
A X
A X
C Z
A Y
A Z
B Y
C Z
C Z
B Y
A Z
C Z
B Z
C Z
C Z
B Z
C Z
A Y
C Z
A X
B X
C Z
A Y
B Z
B Z
C Z
B Z
A X
B Z
B Z
B Z
B Z
B Z
A Z
B Z
B Y
C Z
B Z
C Z
C X
B Z
B Z
B Z
B Z
A X
B Z
B Z
C Z
B Z
A X
A X
A Z
C Z
C Z
A X
A X
C Z
C Z
C Z
A Y
C Z
B Z
C Z
C Z
A Y
C Z
B Z
C X
A X
C Z
C Z
C Z
C Z
A X
C Z
C Z
A Y
C Z
C X
A X
C Z
B Z
C Z
A Z
B Z
B X
A Z
C Z
C Z
A X
C X
B Z
A Y
C Z
A X
B Z
C Z
A X
B Z
A X
C Z
C Y
B Z
A Y
B Z
B Z
B Z
B Z
A X
B Z
B Y
C Z
C Z
B Z
B Z
C Z
B Y
B Z
B Z
B X
B Z
C Z
B Z
A Y
A X
A X
C Z
C X
C Z
B Z
A Z
C Z
C Z
B Z
A Y
C Y
A X
A X
A X
B Z
A X
B Z
B Z
A Y
B Y
C Z
B Z
B Z
C Z
A X
A X
C Z
A Z
B Z
B X
B Z
B Z
A Y
C Z
B Z
A X
C X
C Z
C Z
B Z
A Z
C Z
C Z
C Z
C Z
C Z
C Y
C Z
B Z
B X
C Z
B Z
B Z
B Z
B Z
C Z
B Z
C X
C Z
B X
C Z
A Y
C Z
B Z
B Z
B Y
C Z
A X
B Z
C Z
C Y
A Y
A X
C Z
B Z
C Z
B Z
A X
A Y
A Y
B Y
C Z
C Z
C Z
B Z
C Z
A X
B Z
B X
B Z
C Z
C Z
B Z
B Z
B Z
B Z
A X
A Z
A Y
B Z
B X
B Z
C Y
B Y
B Z
B Z
B Z
C Y
C Z
B Z
A X
A X
A X
C Z
A Y
B Z
B Z
B Z
B Z
A X
B Z
B Z
C Z
B Z
A X
A X
A X
C Z
C Z
B Z
C Z
C Z
C X
B Z
C Z
C Z
B Z
A Y
B Z
B Z
C Z
C X
C Y
A X
C Z
A X
C Z
C Z
C Z
B Z
B Z
A Y
B Z
B Z
C Z
C X
C Z
B Z
B Z
B Z
C X
B Y
B X
A Z
C Z
B Z
A Z
B Y
B Z
A X
B Z
B Y
B Y
B Z
C Z
A X
C Z
B Z
C Z
C Z
A X
C Y
A Z
B Z
C Z
C Z
A X
B Y
C Z
C Z
A Z
C Z
B Z
B Z
C Z
B Z
A X
B Z
A Y
B Z
C Z
B Z
C Z
B Z
A Y
A X
A Y
C X
C Z
A X
C Z
A Z
C Z
C Z
A Z
C Z
A Z
B Z
C Z
B Z
A Z
B Z
B Z
A X
A Y
A X
C X
B Z
C Z
B Z
A X
C Z
B Z
A X
C Z
A X
C Y
A Y
C Z
C X
B Z
B Z
A X
C Z
B Y
C Z
A Y
B X
C Z
A X
B Z
C Z
C Z
C Z
B Z
B Z
A Z
C Z
A Y
B Z
B Z
A Y
B Z
B Z
B Z
C Z
B Z
C Z
A X
B Z
B Z
C Y
C Z
A X
C Z
C Z
C Z
C Y
C Z
A Z
B Z
B Z
C Z
B X
B Z
B Z
A Z
A X
C Z
C X
C Z
A Y
B Z
C Z
B Z
C Z
C Z
C X
B Z
B X
A Z
B Z
B Y
C Z
C X
C Z
A Z
C Z
B Z
C Z
C Z
C Y
C X
C Y
A Z
C X
A X
C Y
B Y
A Z
B Y
C Z
C Z
C Z
B Z
C Z
A X
C Z
A X
B Z
C Z
C Z
A Y
B Z
C Z
C Z
C Z
A X
B Z
C Z
B Z
C Z
B Z
B X
B Z
C Z
B Z
B Z
A Z
A Y
B Z
B Z
B Z
C Z
B Z
B Z
B Z
A Y
C Z
A X
C Z
A X
B X
C Z
B Z
B Z
B Z
C Z
C Z
C X
B Z
B Z
C Z
B Z
C X
A X
B Y
A X
A Z
B Z
C Z
B Z
C X
B X
A Z
C Z
C Z
C Z
A Z
B X
C Z
B Z
A X
B Z
C Z
A X
B Z
C Z
C Z
B Z
C Z
C Z
B Z
C Z
A Z
C Z
A Y
B Z
B Z
B Z
C Z
A Y
C Z
B Z
C Z
B Z
A Z
C Y
C Z
C Z
A X
C Z
B Y
C Z
B Z
A Z
B Z
C Z
B Z
C Y
B Z
C Z
C Z
B Z
C Z
C Z
C Z
C Z
C Z
A X
A Z
A Y
A Y
C Z
A X
A Z
B Z
A Y
A X
B X
C Z
A Y
B Z
B Z
B Z
B Z
A Z
C Z
A X
B Y
C Y
C Y
C Z
C X
A X
A Y
B Z
A Z
A X
C Z
C Z
B Z
C Z
A Y
B Z
A X
C X
A X
B Z
C Z
C Z
A Y
A X
B Z
B Z
B Z
C Z
B Z
B Z
B Z
B X
C Y
C Z
C Z
B X
B Z
B Z
C Z
A X
B Z
B Z
B Z
A Z
B Z
B Z
B Z
C Z
A X
C Y
C Z
B Z
B Z
B X
A Z
A X
B Z
B Z
A Y
B Z
B Z
C Z
C Z
C X
B X
B Z
C Z
C Z
A X
C Z
A Z
C Z
C Y
A X
B Z
A X
A X
C Z
B X
C Z
A X
C Z
C Z
C Z
A Y
A X
C Z
A Z
C Z
B Z
C Y
C Z
B Z
A Y
C Z
B X
A X
B Z
C Z
A X
B X
B Y
B Z
B Z
A Y
B Z
B X
B Y
B Z
C Z
C Z
A Z
A X
C Z
A Z
C Z
A X
C Z
C Z
B Z
B Z
C Z
C X
C Z
A X
C Z
B Z
C Z
A X
A X
A X
C Z
C Z
A Z
C Z
B Z
A X
B Z
B X
C Z
B Z
C Z
B Z
B X
C Z
A Z
A Z
C Z
B Z
B Z
B Z
C Z
C X
B Z
A X
B Z
B Z
C Z
B Z
C Z
B Z
B X
C Z
C Z
A X
C Z
C Z
B Z
A X
C Y
B Z
C Z
A Y
B Z
C Z
A X
B Z
C Z
C X
A Z
C Z
C Y
B Z
B Z
A X
B Z
B Z
A Z
C Z
B Z
A X
A Z
B Z
B Z
C Z
C Z
A X
A Y
B Z
B Z
A Y
A X
C Z
A Y
A X
C Z
C Z
B Z
A X
C Z
A X
C Z
B X
C Z
B Z
C Y
B Z
C Y
C Z
B Z
B Z
A Y
C Z
C Y
A X
B Z
B Z
A X
B Z
B Z
B Z
A X
A Y
C Z
C Z
C X
B X
A X
A X
B Z
A X
B Z
B Z
B Z
B X
C Z
C Z
B Z
C Z
C Z
A X
B Z
C Z
C Z
C Z
C Z
B Z
C Z
C Z
B Z
B Z
A X
C Z
B Z
C Z
C Z
C Z
B Z
A X
C Z
A Y
B Z
C Z
C Z
C Z
A X
B Z
C Y
C Z
C X
B Z
B Z
B Z
A Z
C Y
B Z
B Z
B Z
C Z
C Y
A X
B Z
B Z
C Y
C Z
A X
A Z
C X
C X
A Z
B X
A X
C Z
C Z
B Z
C Z
B Y
C Z
C Z
B Z
B Z
A Z
B Z
B Z
A X
C Z
B X
B Y
B Z
C Y
C Z
B Z
A Z
C Z
C Z
B Z
C Z
A Z
C Z
A X
C Z
C Z
A Z
C X
C Z
A X
C Z
A X
C Z
A X
A Z
B Z
C Z
C Z
C Z
A X
A Z
C Z
C Y
A Y
C Y
C Z
B Y
A X
C Z
B Z
C Z
C Z
B Z
C Z
B Z
C X
C Z
B Z
C Z
A X
A X
A X
B Z
B Z
B Z
A X
A Z
B Z
C Z
C Z
A X
A Y
C Z
A X
C Z
A Y
A X
A Z
A Z
C Z
C Z
B Y
C Z
A X
B Z
A Z
B Z
C Z
A X
C X
B Z
B Z
C Z
C Z
A X
B Z
C Z
B Z
A X
B Z
C Y
A X
B Z
B Z
C Z
C Z
A X
B Z
B Z
C Z
B Z
C Z
A X
C Z
C Z
B Z
A X
C Z
B Z
B X
C Z
C Y
B X
A Z
A Z
C Z
A Y
B X
B Z
C Z
C Z
C Z
A Z
C Z
C Z
C Y
C Z
B Z
A Z
A Z
C X
C Z
B Y
C Z
C Z
C X
B Y
A X
C X
A Y
C Z
A Y
C Y
A X
B Z
C Z
B Z
A X
A X
C Z
B Z
A X
C Z
A Y
C X
B Z
C Z
C Z
A X
C Z
C Z
A X
C Y
A X
A X
C Z
B Z
A X
A X
C Z
A X
C Z
B Z
A Z
C Z
B X
C Z
C Z
B Z
A Y
A X
C Y
B Z
B Z
B Z
A X
A Z
C Z
C Z
C Z
A Z
B Z
C Z
A Z
B Z
C Z
A X
A X
B Z
A X
C Z
C Z
B Z
C X
B Z
A X
A X
C Z
C Z
B Z
A X
A Y
B Z
A X
C Z
C Z
A X
A Y
A X
C X
A Y
A X
B Z
C Y
B Z
C Z
C Z
B Z
C Z
C Z
C X
C Z
C X
B Z
B Z
C Z
B X
C Z
B Z
C Z
C Z
A Y
B X
A X
A Y
A X
B Z
C Z
C Z
A X
C Y
B Z
B Z
B Z
B Z
A X
C Z
A X
B Z
C Z
A Z
C X
B X
C Z
B Y
A Z
A Y
A X
C Z
B X
B Z
A Z
A X
A Z
C Z
B Z
C Z
A X
B Z
C Z
B Z
B Z
C Z
B X
B Z
A X
A X
A X
B Z
B Z
B Z
A X
C Z
C Y
B Z
B X
C Z
C Y
B Z
A X
C Z
C X
A X
B Z
C Z
A Z
B X
B Z
A X
C Z
B Z
B Z
B X
A Y
C Y
B Z
C Z
C X
C Z
B Z
C Z
A X
A X
B Z
A X
B Z
B Z
C Z
C Z
A X
B Z
C Y
B Z
C Z
C Z
C Z
B Z
B X
C Z
C Z
C Z
B Z
B Z
C Z
A X
A Y
B Z
C Z
A Z
B X
B Z
C Z
C Z
B Z
C X
B Z
C Z
A X
B Z
A X
B Z
B Z
C X
A Y
C Z
C Z
A X
B Y
C Z
B X
C Z
B Z
A Z
A X
A X
A Z
A X
A X
C Z
C Z
C Z
C Z
B Z
A Y
B Z
B Z
C Z
B Z
C Z
C Z
B Z
B X
A Y
C Z
C Z
B Z
B Z
C Z
B Z
B Z
C Z
C Z
A Z
C Z
B Z
B Z
C Z
C Z
C Y
C Z
A Y
B Y
C Z
A X
B Z
C Z
A Y
B Z
B Z
B Z
C Z
C Z
A X
A X
C Z
C X
B Z
C X
A Z
C Z
B Z
C Z
C Z
C X
B Z
C Z
B Z
C Z
A X
C X
C Z
C Z
B Z
C Z
C Z
B Z
B Z
A X
C Z
C Z
B Z
A X
A X
C Z
A Y
B Z
C Z
C Z
C Z
B X
C Z
C Y
B Z
B Z
C Y
A X
A Y
C Z
A Z
B Z
A X
B Z
C Y
B Z
C Z
B Z
B Z
B Z
A X
C Z
B Z
C Z
C Z
C Y
C Z
A Y
C Z
C Y
A Z
B Z
C Z
A X
B Z
B Z
C Z
C X
A X
C Z
A Z
A X
C Z
A Z
C Z
B Z
A Z
C Z
B Z
B Z
B X
B Z
C Z
A X
C Z
B Z
B Z
A X
B Z
C Z
B Y
A X
A Z
C Z
B Y
A Z
A Y
C X
B Z
B Z
C X
C Y
A X
A Y
C Z
A X
A Z
B Z
B Z
A X
A X
C Z
A X
C X
A X
C Z
A X
B Z
C Z
B Z
B Z
A X
C Z
B Z
B Z
B Z
A X
C Z
A X
B Z
C X
B Z
A Z
A X
C X
C Y
B Z
C Z
C X
B Z
A X
C Z
B Z
A X
B Z
A Z
C Z
B Z
C X
B Z
C Z
A Z
A X
A X
A Y
A X
C Z
B Z
C Z
A X
C Z
C Z
B Z
C Z
C Z
C Z
C Z
C Z
C Z
B Z
B Z
B Z
B Z
B Z
C Z
B Z
B X
C Z
B Y
B Z
C Y
A Z
B Z
A Z
B Z
C Z
C Z
C Z
B Z
A X
C Z
A X
B Y
C Z
C X
B Y
A X
C Z
C Z
A Y
A X
B Z
A Y
B Z
C Z
C Z
A X
B Z
B Z
C Y
C Z
B Z
C Z
B X
C Z
B Z
B X
A Y
A X
C Z
B Z
B Z
C Z
B Z
A Y
C Z
A Y
B Z
C Z
B Z
A Z
B Z
C Z
C Z
A Z
C Z
C X
A Y
A X
C Z
B Z
C Z
C Y
C Z
C Z
B Z
C Z
C Z
B Z
C X
B Y
C Z
B Z
A X
C Z
B Z
B Z
A Y
C Z
C Z
B X
B Z
C Z
A Z
C Z
A Z
C Z
C Z
B Z
C X
B Y
C Z
C Y
C Z
C Z
C Z
A X
A X
B Z
C Z
C Z
B Z
C Z
A X
C Z
C Y
A X
B Z
B Z
A X
A Y
B Z
B X
A X
C Z
C Z
B Z
A Z
B Z
B Z
C Y
A Y
B X
C Z
A Z
A Z
B Z
A Z
C Y
B Z
B Z
C Z
A X
C Z
C Z
B Z
B Z
C Z
C Z
C Z
A Y
B Z
C Z
A Z
C Z
A X
B Z
C Z
A Y
B Z
B Y
C Z
B Z
C Z
C X
A X
B Z
B Z
C Z
A X
A X
B Z
C Z
B Z
C Z
B X
B Z
B Z
B Z
C Z
B Z
B Z
C Z
A X
A X
C Z
B Y
A X
A Z
B Z
B Z
B Z
C X
B X
B Z
C Z
A X
A Z
B X
A Z
B Z
C Z
A Y
C Z
B Y
B Z
B Y
C Z
A Z
C Z
B Z
C Z
C Z
A X
A X
B Z
B Z
B X
B Y
A X
C Z
B Z
C Z
B X
C Z
B Z
C Y
C Z
B Z
A X
A Z
B Y
A X
B Z
A X
C Z
B Z
C Z
B Z
C Z
C Z
A X
C Z
B Z
B Z
A X
B Y
C Z
B Z
C X
B Z
C Z
B Z
B Z
B Z
C X
B X
C Z
A X
B Z
B Z
B Z
C X
B Z
C Z
B Z
A X
C Z
C Z
B X
C Y
C Z
B Z
B Y
C Z
B X
C Z
A Z
C Z
C Z
B Z
B Z
A Z
A X
B Z
C X
B Z
C Z
B Z
C Z
C Z
B Z
A X
B Z
C Z
C Z
C Z
C Z
A Y
B Z
B Z
C Z
B Z
C Z
C Z
B Z
A Y
C Z
C Z
C X
B Z
A X
B Z
C Z
C Z
C Y
B X
C Z
B X
B Z
B X
A X
A X
A Y
A Y
A Z
A Z
C Z
C Z
C Z
C Z
C Z
A X
A X
C X
B Z
B Z
C Z
C Z
A X
C Z
A X
B Z
C X
B Z
C Z
B Z
B Z
B Z
C Z
C Z
A X
A X
C Z
C Z
A X
A Y
B Z
A Z
A X
C Z
B Z
C Z
C Z
A X
A X
C Z
A X
B Z
C Z
C Z
A Z
C Z
C Z
A X
B Z
A X
B Z
C Z
B Z
C Z
C Y
A Z
A X
C Z
B Z
C X
A Z
B Z
B Z
C Z
A X
B Z
A X
C Z
B Z
B Z
B Z
B Z
A Z
B Z
B Z
C Z
A X
B Z
C Z
C Z
C Y
A X
A X
B Z
C Z
C Z
B Z
C Z
C Y
C Y
A X
C Z
C Z
A X
B Z
B Z
C Z
A Y
A Y
C Z
B Z
C X
B Z
B Z
C Z
A X
B Z
A X
C Z
C Z
A X
B Y
C Z
B X
C Z
C Z
B Z
A X
B Z
A Y
C Z
C X
A X
A Y
C Z
B Y
B Z
B Z
B Z
A Z
B Z
C Z
B Z
B X
B Z
C Z
B Z
C Z
B Z
A X
B Z
A Z
C Z
B X
A X
C Z
B Z
C Z
A Z
A X
B Z
B Z
B Z
B Z
C Z
B Z
C Z
B Z
B Z
B Z
B Z
C Z
C Z
C Y
A Y
C Z
C Z
B Z
B X
A X
C Z
A Y
C Y
C X
C Z
C Z
B Z
B Z
C X
A Z
B Z
C Z
C Z
A X
C X
B Z
B Z
A X
B X
B Z
C Z
B Z
C Z
C Y
B Z
B Z
B Z
C Z
A Z
C Z
C X
C Z
B Z
B Z
A Y
B Z
C X
C Z
A X
C Z
B Z
A X
C Z
A Y
B Z
B Z
A X
B Z
B Z
C Z
B Z
B Z
C Z
B X
B Z
B Z
A Y
C Z
B Z
C Z
B Y
C Z
A X
C X
A X
C Z
A Z
A Y
C Z
C Z
A Y
B Z
B X
C Z
A X
B Z
C Z
C Z
C Z
B Z
A Y
A Y
C X
B Y
C Z
B Z
A X
C Z
A Z
B Z
A X
B X
A Z
B Y
A Z
A Y
B Z
B Z
A Z
B Z
A Z
B Z
B Z
C Z
A Z
C Z
C Z
C Z
A Z
C Z
B Z
A X
B Z
A X
A X
B Z
B Z
C Z
B Z
A X
C X
B Z
C Z
C Z
C Y
C Z
C Z
B Z
B Z
C Z
B Y
A X
C Z
C Z
C Z
C Z
C Z
C Z
B Z
B Z
C Z
C Z
A X
C Z
C Z
A X
B Z
B Z
C Z
B Z
C Z
B Z
B Z
B Z
B Z
C Z
C Z
"""
